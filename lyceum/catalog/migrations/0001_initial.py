# Generated by Django 3.2 on 2022-03-20 16:17

import catalog.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_published', models.BooleanField(default=True)),
                ('slug', models.CharField(max_length=200, unique=True, validators=[django.core.validators.RegexValidator])),
                ('weight', models.IntegerField(default=100, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(32766)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_published', models.BooleanField(default=True)),
                ('slug', models.CharField(max_length=200, unique=True, validators=[django.core.validators.RegexValidator])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_published', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=150)),
                ('text', models.TextField(validators=[catalog.validators.validate_words_brilliants])),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.category')),
                ('tags', models.ManyToManyField(to='catalog.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
